{"version":3,"sources":["icons/deleteIcon.svg","icons/addIcon.svg","icons/upIcon.svg","icons/downIcon.svg","components/TaskItem/TaskItem.js","components/AddTask/AddTask.js","components/Bottle/Bottle.js","components/Shelf/Shelf.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TaskItem","props","className","id","completed","data-toggle","data-placement","title","type","defaultChecked","onClick","completeTask","taskID","htmlFor","display","deadline","deleteTask","src","deleteIcon","alt","text","AddTask","addTaskStatus","addTask","addIcon","upIcon","downIcon","cancelIcon","placeholder","console","log","switchLayout","Bottle","taskItems","bottleTasks","length","taskHTML","push","i","pos","key","isCompleted","unshift","getTasks","Shelf","bottleTitles","bottleHTML","shelfTasks","includes","bottle","bTasks","Array","filter","x","shelf","getBottleTasks","App","useState","tasks","setTasks","updatedTasks","task","map","shelfTitles","shelvesHTML","sTasks","Object","values","getShelfTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2712e04e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/deleteIcon.b789f4a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/addIcon.5e4c0d9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/upIcon.cca46599.svg\";","module.exports = __webpack_public_path__ + \"static/media/downIcon.6fd5c4ae.svg\";","import React from 'react';\nimport './TaskItem.css';\n\nimport deleteIcon from '../../icons/deleteIcon.svg'\n\nfunction TaskItem(props) {\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\" id={`${props.completed ? \"completed-task-body\" : \"task-body\"}`} /*style={{width: auto}}*/>\n        <div className=\"row\">\n\n          <div className=\"col-1 form-check\" id=\"outline\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tick/Untick to complete/uncomplete\">\n            <input \n              type=\"checkbox\" \n              defaultChecked={ props.completed }\n              className=\"form-check-input large-check-box\" \n              id=\"exampleCheck1\" \n              onClick={ () => props.completeTask(props.taskID) }\n            ></input>\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\"></label>\n          </div>\n\n          <h6 className=\"card-text col-8\" id=\"outline\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Optional deadline\" display=\"inline\">{props.deadline > 1 ? `${props.deadline} days` : '1 DAY!!!'}</h6>\n\n          <button \n            type=\"button\" className=\"col-1 btn\" onClick={ () => props.deleteTask(props.taskID) }\n\n            data-toggle=\"tooltip\" data-placement=\"right\" title=\"Delete task\">\n            <img src={ deleteIcon } alt='' className='delete-svg'/>\n          </button>\n\n          <p \n            id={`${props.completed ? \"completed-task-text\":\"task-text\"}`} \n            className=\"card-text col-12\" \n            data-toggle=\"tooltip\" \n            data-placement=\"bottom\"\n            title=\"Add task text\"\n            >{props.text}\n          </p>    \n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskItem;","import React, { Fragment } from 'react';\nimport './AddTask.css';\n\nimport addIcon from '../../icons/addIcon.svg'\n\nimport upIcon from '../../icons/upIcon.svg'\nimport downIcon from '../../icons/downIcon.svg'\n\nimport cancelIcon from '../../icons/deleteIcon.svg'\n\n\nfunction AddTask(props) {\n\n    let addTaskStatus = 0;\n\n    function switchTaskStatus() {\n        addTaskStatus === 0 ? addTaskStatus = 1 : addTaskStatus = 0;\n        //console.log('switching within AddTask.js');\n        props.addTask(addTaskStatus);\n    }\n\n    function switchLayout() {\n\n        switch (addTaskStatus) {\n            case 0:\n                return ( \n                    <Fragment>\n                        <button \n                            type=\"button\" className=\"col-12 btn\" id=\"outline\"  onClick={ () => switchTaskStatus() }\n                            data-toggle=\"tooltip\" data-placement=\"right\" title=\"Add task\" >\n                            <img src={ addIcon } alt='' className='add-svg'/>\n                        </button>\n                    </Fragment>\n                );\n            case 1:\n                return  (   \n                    <Fragment>\n                        <div className=\"card\">\n                            <div className=\"card-body\" id='task-body' >\n                                <div className=\"row\">\n\n                                    <button \n                                        type=\"button\" className=\"col-2 btn\"\n\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title=\"Add task above\">\n                                        <img src={ upIcon } alt='' className='up-svg'/>\n                                    </button>\n\n                                    <button \n                                        type=\"button\" className=\"col-2 btn\"\n\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title=\"Add task below\">\n                                        <img src={ downIcon } alt='' className='down-svg'/>\n                                    </button>\n\n                                    <h6 className=\"card-text col-6\" id=\"outline\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Optional deadline\" display=\"inline\">{ '0 days'}</h6>\n\n                                    <button \n                                        type=\"button\" className=\"col-1 btn\" \n\n                                        data-toggle=\"tooltip\" data-placement=\"right\" title=\"Cancel task\" >\n                                        <img src={ cancelIcon } alt='' className='delete-svg'/>\n                                    </button>\n\n                                    <p \n                                        id='task-text'\n                                        className=\"card-text col-12\" \n                                        data-toggle=\"tooltip\" \n                                        data-placement=\"bottom\"\n                                        title=\"Add task text\"\n                                        placeholder='...add task here'\n                                        >\n                                    </p>    \n\n                                </div>\n                            </div>\n                        </div>\n                    </Fragment> \n                );\n            default:\n                console.log('invalid add task layout');\n        }\n    }\n\n  return switchLayout();\n}\n\nexport default AddTask;","import React from 'react';\nimport './Bottle.css';\nimport TaskItem from '../TaskItem/TaskItem';\nimport AddTask from '../AddTask/AddTask';\n\nimport addIcon from '../../icons/addIcon.svg'\n\nfunction Bottle(props) {\n\n  let taskItems = props.bottleTasks.length;\n\n  function getTasks(props) {\n\n    //let bottleTitles = [];\n    let taskHTML = [];\n\n    // add task button needs to be added here so it's between push and unshifts\n    taskHTML.push(<AddTask addTask={ props.addTask }/>);\n    // taskHTML.push(\n    //   <button \n    //     type=\"button\" className=\"col-12 btn\" id=\"outline\"\n    //     data-toggle=\"tooltip\" data-placement=\"right\" title=\"Add task\" onClick={ () => props.addTask() }>\n    //     <img src={ addIcon } alt='' className='add-svg'/>\n    //   </button>);\n\n    // sorts the tasks into the relevant position\n    for (let i = 0; i < props.bottleTasks.length; i++) {\n      switch (props.bottleTasks[i].pos) {\n        case 0:\n          taskHTML.push(\n            <TaskItem \n              key={props.bottleTasks[i].taskID} \n              text={props.bottleTasks[i].text} \n              completed={props.bottleTasks[i].isCompleted} \n              taskID={props.bottleTasks[i].taskID} \n              deadline={props.bottleTasks[i].deadline}\n              deleteTask={ props.deleteTask }\n              completeTask={ props.completeTask }\n            />);\n            break;\n        case 1:\n          taskHTML.unshift(\n            <TaskItem \n              key={props.bottleTasks[i].taskID} \n              text={props.bottleTasks[i].text} \n              completed={props.bottleTasks[i].isCompleted} \n              taskID={props.bottleTasks[i].taskID} \n              deadline={props.bottleTasks[i].deadline}\n              deleteTask={ props.deleteTask }\n              completeTask={ props.completeTask }\n            />);\n          break;\n        default:\n          console.log('invalid pos: ' + props.taskID);\n          break;\n      }\n    }\n    return <div>{taskHTML}</div>;\n  }\n\n  return (\n    <div className=\"container col-12 col-md-6 col-lg-4 col-xl-3 align-self-end bottle\">\n        {getTasks(props)}\n        <h2>{taskItems > 1 ? `${taskItems} tasks` : '1 task'}</h2>\n    </div>\n  );\n}\n\nexport default Bottle;","import React from 'react';\nimport './Shelf.css';\nimport Bottle from '../Bottle/Bottle';\n\nfunction Shelf(props) {\n\n  function getBottleTasks(props) {\n\n    let bottleTitles = [];\n    let bottleHTML = [];\n\n    // defines the required bottle amount and puts the bottle numbers in an array\n    for (let i = 0; i < props.shelfTasks.length; i++) {\n      if (bottleTitles.includes(props.shelfTasks[i].bottle) === false) {\n        bottleTitles.push(props.shelfTasks[i].bottle);\n      }\n    }\n    let bTasks = new Array(bottleTitles.length);\n\n    // sorts the tasks into the relevant bottle\n    for (let i = 0; i < bottleTitles.length; i++) {\n      bTasks[i] = props.shelfTasks.filter(x => x.bottle === bottleTitles[i]);\n      bottleHTML.push(\n        <Bottle \n          key={props.shelfTasks[i].taskID} \n          bottleTasks={bTasks[i]} \n          deleteTask={ props.deleteTask } \n          completeTask={ props.completeTask } \n          addTask={ props.addTask }\n          text={props.shelfTasks[i].shelf}\n        />);\n    }\n    return <div className=\"row\" id=\"nowrap\">{bottleHTML}</div>;\n  }\n\n  return (\n    <div>\n        <div className=\"container screen\">\n            {getBottleTasks(props)}\n        </div>\n        <div className = \"row shelf\" id=\"nowrap\">shelf name justify me</div>\n    </div>\n  );\n}\n\nexport default Shelf;","import React, { useState } from 'react';\nimport './App.css';\nimport Shelf from './components/Shelf/Shelf';\nimport AddTask from './components/AddTask/AddTask';\n\nfunction App() {\n\n  // delete function needs confirmation step\n// regex task str length\n// need an add shelf button\n// each shelf needs a default addtask bottle in addition to any bottles\n\n  // destructuring method\n  const [tasks, setTasks] = useState([\n    { text: 'Fly to Mars', isCompleted: true, shelf: 'morning', bottle:1,  taskID: '001', pos: 1, deadline: 4 },  /*an array instead with a b/n bool*/\n    { text: 'Get marooned', isCompleted: false, shelf: 'morning', bottle:1,  taskID: '003', pos: 1, deadline: 0}, // rearrange the order of the properties to be tidier\n    { text: 'Grow spuds from poo', isCompleted: false, shelf: 'morning', bottle:1,  taskID: '002',pos: 0, deadline: 2},\n    { text: 'Stay home', isCompleted: true, shelf: 'morning', bottle:2,  taskID: '013', pos: 1, deadline: 4 },\n    { text: 'Protect the NHS', isCompleted: false, shelf: 'morning', bottle:2,  taskID: '012', pos: 0, deadline: 0},\n    { text: 'Save lives', isCompleted: false, shelf: 'morning', bottle:2,  taskID: '011', pos: 0, deadline: 2},\n    { text: 'Walk cats', isCompleted: true, shelf: 'afternoon', bottle:2,  taskID: '004', pos: 0, deadline: 11},\n    { text: 'Wash dinner', isCompleted: true, shelf: 'afternoon', bottle:1,  taskID: '005', pos: 0, deadline: 7},\n    { text: 'Dress dog', isCompleted: false, shelf: 'afternoon', bottle:1,  taskID: '006', pos: 0, }, // needs to handle no deadline\n    { text: 'Walk kids', isCompleted: true, shelf: 'afternoon', bottle:1,  taskID: '007', pos: 0, deadline: 8},\n    { text: 'Watch Alien', isCompleted: false, shelf: 'evening', bottle:1,  taskID: '008', pos: 1, deadline: 24},\n    { text: 'Watch Aliens', isCompleted: true, shelf: 'evening', bottle:1,  taskID: '009', pos: 0, deadline: 365},\n    { text: 'Go to bed', isCompleted: false, shelf: 'evening', bottle:2, taskID: '010', pos: 0, deadline: 1},\n    { text: 'Midnight feast', isCompleted: false, shelf: 'evening', bottle:3, taskID: '014', pos: 0, deadline: 1},\n    { text: 'Wee', isCompleted: false, shelf: 'evening', bottle:4, taskID: '015', pos: 0, deadline: 1},\n    { text: 'Nother wee', isCompleted: false, shelf: 'evening', bottle:4, taskID: '016', pos: 1, deadline: 1}\n  ]);\n\n  function addTask(addTaskStatus) {\n    //console.log('App Add task function activated');\n    console.log(addTaskStatus);\n    // needs to identify correct shelf, bottle and position to add the task with correct info\n    setTasks(tasks); // needs to update 'something' so add task button updates so not tasks, but what and where\n  }\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter(task => task.taskID !== id);\n    setTasks(updatedTasks);\n  }\n\n  function completeTask(id) {\n    console.log('complete ' + id + ' clicked');\n    const updatedTasks = tasks.map(task => {\n      if(task.taskID === id) {\n        !task.isCompleted ? task.isCompleted = true : task.isCompleted = false;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function getShelfTasks(tasks) {\n\n    let shelfTitles = [];\n    let shelvesHTML = [];\n\n    // defines the required shelf amount and puts the shelf names in an array\n    for (let i = 0; i < tasks.length; i++) {\n      if (shelfTitles.includes(tasks[i].shelf) === false) {\n        shelfTitles.push(tasks[i].shelf);\n      }\n    }\n    let sTasks = new Array(shelfTitles.length);\n\n    // sorts the tasks into the relevant shelf\n    for (let i = 0; i < shelfTitles.length; i++) {\n      sTasks[i] = Object.values(tasks).filter(x => x.shelf === shelfTitles[i]);\n      shelvesHTML.push(<Shelf key={ tasks[i].taskID } shelfTasks={sTasks[i]} deleteTask={ deleteTask } completeTask={ completeTask } addTask={ addTask }/>);\n    }\n    return <div>{shelvesHTML}</div>;\n  }\n\n  return (\n        <div className=\"App\">\n          {getShelfTasks(tasks)}\n        </div>\n  );\n}\n        \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}