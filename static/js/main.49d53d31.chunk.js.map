{"version":3,"sources":["icons/delete.svg","components/TaskItem/TaskItem.js","components/Bottle/Bottle.js","components/Shelf/Shelf.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TaskItem","props","className","id","completed","type","data-toggle","data-placement","title","taskID","display","deadline","onClick","console","log","deleteTask","src","deleteIcon","text","Bottle","taskItems","bottleTasks","length","taskHTML","i","push","key","isCompleted","getTasks","Shelf","bottleTitles","bottleHTML","shelfTasks","includes","bottle","bTasks","Array","filter","x","shelf","getBottleTasks","App","useState","tasks","setTasks","updatedTasks","task","shelfTitles","shelvesHTML","sTasks","Object","values","getShelfTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.49d53d31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.665926e2.svg\";","import React from 'react';\nimport './TaskItem.css';\n\nimport deleteIcon from '../../icons/delete.svg'\n\nfunction TaskItem(props) {\n\n  function handleDeleteClick() {\n    console.log('Delete has been clicked');\n    console.log(props.taskID);\n    props.deleteTask(props.taskID);\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\" id={`${props.completed ? \"completed-task-body\" : \"task-body\"}`} /*style={{width: auto}}*/>\n        <div className=\"row\">\n          <button type=\"button\" className=\"col-2 btn btn-secondary btn-sm\" id=\"id-text\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"Tick/Untick to complete/uncomplete\">{props.taskID}</button>\n          <h6 className=\"card-text col-8\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Optional deadline\" display=\"inline\">{props.deadline > 1 ? `${props.deadline} days` : '1 DAY!!!'}</h6>\n          <button \n            type=\"button\" className=\"col-2 btn btn-secondary btn-sm\" id=\"id-text\" onClick={ handleDeleteClick }\n\n            data-toggle=\"tooltip\" data-placement=\"right\" title=\"Delete task\">\n            <img src={ deleteIcon } className='delete-svg'/>\n          </button>\n          <p className=\"card-text col-12\" id={`${props.completed ? \"completed-task-text\":\"task-text\"}`} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Add task text\">{props.text}</p>                                                 \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskItem;\n\n  // <div class=\"form-check\">\n  //   <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n  //   <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n  // </div>","import React from 'react';\nimport './Bottle.css';\nimport TaskItem from '../TaskItem/TaskItem';\n\nfunction Bottle(props) {\n\n  let taskItems = props.bottleTasks.length;\n\n  function getTasks(props) {\n\n    //let bottleTitles = [];\n    let taskHTML = [];\n\n    // defines whether a task is b or n, implement later unshift with one, push with t'other\n    // for (let i = 0; i < props.shelfTasks.length; i++) {\n    //   if (bottleTitles.includes(props.shelfTasks[i].bottle) === false) {\n    //     bottleTitles.push(props.shelfTasks[i].bottle);\n    //   }\n    // }\n    //let bTasks = new Array(bottleTitles.length);\n\n    // sorts the tasks into the relevant shelf\n    for (let i = 0; i < props.bottleTasks.length; i++) { // don't use taskIems here because you'll probably alter it with complete/incomplete later\n      taskHTML.push(\n      <TaskItem \n        key={props.bottleTasks[i].taskID} \n        text={props.bottleTasks[i].text} \n        completed={props.bottleTasks[i].isCompleted} \n        taskID={props.bottleTasks[i].taskID} \n        deadline={props.bottleTasks[i].deadline}\n        deleteTask={ props.deleteTask }\n      />);\n    }\n    return <div>{taskHTML}</div>;\n  }\n\n  return (\n    <div className=\"container col-12 col-md-6 col-lg-4 col-xl-3 align-self-end task-box\">\n        {getTasks(props)}\n        <h2>{taskItems > 1 ? `${taskItems} tasks` : '1 task'}</h2>\n    </div>\n  );\n}\n\nexport default Bottle;","import React from 'react';\nimport './Shelf.css';\nimport Bottle from '../Bottle/Bottle';\n\nfunction Shelf(props) {\n\n  function getBottleTasks(props) {\n\n    let bottleTitles = [];\n    let bottleHTML = [];\n\n    // defines the required bottle amount and puts the bottle numbers in an array\n    for (let i = 0; i < props.shelfTasks.length; i++) {\n      if (bottleTitles.includes(props.shelfTasks[i].bottle) === false) {\n        bottleTitles.push(props.shelfTasks[i].bottle);\n      }\n    }\n    let bTasks = new Array(bottleTitles.length);\n\n    // sorts the tasks into the relevant bottle\n    for (let i = 0; i < bottleTitles.length; i++) {\n      bTasks[i] = props.shelfTasks.filter(x => x.bottle === bottleTitles[i]);\n      bottleHTML.push(<Bottle key={props.shelfTasks[i].taskID} bottleTasks={bTasks[i]} deleteTask={ props.deleteTask } text={props.shelfTasks[i].shelf}/>);\n    }\n    return <div className=\"row\" id=\"nowrap\">{bottleHTML}</div>;\n  }\n\n  return (\n    <div>\n        <div className=\"container screen\">\n            {getBottleTasks(props)}\n        </div>\n        <div className = \"row shelf\" id=\"nowrap\">shelf name justify me</div>\n    </div>\n  );\n}\n\nexport default Shelf;","import React, { useState } from 'react';\nimport './App.css';\nimport Shelf from './components/Shelf/Shelf';\n\nfunction App() {\n\n  // destructuring method\n  const [tasks, setTasks] = useState([\n    { text: 'Fly to Mars', isCompleted: true, shelf: 'morning', bottle:1,  taskID: '001', deadline: 4 },  /*an array instead with a b/n bool*/\n    { text: 'Get marooned', isCompleted: false, shelf: 'morning', bottle:1,  taskID: '003', deadline: 0}, // rearrange the order of the properties to be tidier\n    { text: 'Grow spuds from poo', isCompleted: false, shelf: 'morning', bottle:1,  taskID: '002', deadline: 2},\n    { text: 'Stay home', isCompleted: true, shelf: 'morning', bottle:2,  taskID: '013', deadline: 4 },\n    { text: 'Protect the NHS', isCompleted: false, shelf: 'morning', bottle:2,  taskID: '012', deadline: 0},\n    { text: 'Save lives', isCompleted: false, shelf: 'morning', bottle:2,  taskID: '011', deadline: 2},\n    { text: 'Walk cats', isCompleted: true, shelf: 'afternoon', bottle:2,  taskID: '004', deadline: 11},\n    { text: 'Wash dinner', isCompleted: true, shelf: 'afternoon', bottle:1,  taskID: '005', deadline: 7},\n    { text: 'Dress dog', isCompleted: false, shelf: 'afternoon', bottle:1,  taskID: '006' }, // needs to handle no deadline\n    { text: 'Walk kids', isCompleted: true, shelf: 'afternoon', bottle:1,  taskID: '007', deadline: 8},\n    { text: 'Watch Alien', isCompleted: false, shelf: 'evening', bottle:1,  taskID: '008', deadline: 24},\n    { text: 'Watch Aliens', isCompleted: true, shelf: 'evening', bottle:1,  taskID: '009', deadline: 365},\n    { text: 'Go to bed', isCompleted: false, shelf: 'evening', bottle:2, taskID: '010', deadline: 1},\n    { text: 'Midnight feast', isCompleted: false, shelf: 'evening', bottle:3, taskID: '014', deadline: 1},\n    { text: 'Wee', isCompleted: false, shelf: 'evening', bottle:4, taskID: '015', deadline: 1},\n    { text: 'Nother wee', isCompleted: false, shelf: 'evening', bottle:4, taskID: '016', deadline: 1}\n  ]);\n\n  function deleteTask(id) {\n    const updatedTasks = tasks.filter(task => task.taskID !== id);\n    setTasks(updatedTasks);\n    //return updatedTasks;\n  }\n\n  function getShelfTasks(tasks) {\n\n    let shelfTitles = [];\n    let shelvesHTML = [];\n\n    // defines the required shelf amount and puts the shelf names in an array\n    for (let i = 0; i < tasks.length; i++) {\n      if (shelfTitles.includes(tasks[i].shelf) === false) {\n        shelfTitles.push(tasks[i].shelf);\n      }\n    }\n    let sTasks = new Array(shelfTitles.length);\n\n    // sorts the tasks into the relevant shelf\n    for (let i = 0; i < shelfTitles.length; i++) {\n      sTasks[i] = Object.values(tasks).filter(x => x.shelf === shelfTitles[i]);\n      shelvesHTML.push(<Shelf key={ tasks[i].taskID } shelfTasks={sTasks[i]} deleteTask={ deleteTask }/>);\n    }\n    return <div>{shelvesHTML}</div>;\n  }\n\n  return (\n        <div className=\"App\">\n          {getShelfTasks(tasks)}\n        </div>\n  );\n}\n\n// put in footer <p> Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></p>\n          \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}